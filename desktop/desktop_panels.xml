<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Please see the LICENSE.md file included with this distribution for attribution and copyright information. -->

<root version="3.0">
	<panel name="date" modes="host">
		<class>chattime</class>
		<bounds>10,100,260,110</bounds>
		<dynamic />
		<locked />
	</panel>
	<panel name="busylist" modes="client">
		<class>busywindow</class>
		<bounds>10,100,300,110</bounds>
		<dynamic />
		<locked />
		<!-- <script>
			function onInit()
				if OptionsManager.isOption("BUSYWINDOWOPTION", "disabled") then
					close();
					setVisible(false);
				else
					setVisible(true);
				end
			end
		</script> -->
	</panel>
	
	<windowclass name="busywindow">
		<frame>recordsheet</frame>
		<placement>
			<size width="500" height="30" />
			<position x="260" y="30" />
		</placement>
		<sizelimits>
			<dynamic />
		</sizelimits>
		<minimize>reminder_button</minimize>
		<!-- <script>
			function onInit()
				if OptionsManager.isOption("BUSYWINDOWOPTION", "disabled") then
					close();
				end
			end
		</script> -->
		<sheetdata>
			<windowlist name="busylist">
				<anchored>
					<top offset="15" />
					<left offset="15" />
					<right offset="-40" />
					<bottom offset="-15" />
				</anchored>
				<sortby><control>name</control></sortby>
				<child><backcolor>1A40301E</backcolor></child>
				<datasource>DB.busylist</datasource>
				<class>list_busyentry</class>
				<empty font="reference-r" text="Double-Click to add a Busy Action for active character. Only one per Active Character. Right-Click and navigate radial menu to lock/unlock/minimize" hidereadonly="true" />
				<acceptdrop>
					<class>list_busyentry</class>
					<class>referencetext</class>
					<class>referencetextwide</class>
					<field>*</field>
				</acceptdrop>
				<allowcreate />
				<allowdelete />
				<ownedonly />
				<script>
					function onDoubleClick()
						if not User.isHost() then
							ReminderManager.notifyAddBusyNode();
						end
					end
					function update()
						for k,v in pairs(getWindows()) do
							v.update();
						end
					end
					
				</script>
			</windowlist>
			<scrollbar>
				<anchored to="busylist" />
				<target>busylist</target>
			</scrollbar>
			<button_iedit name="busylist_iedit">
				<anchored position="insidetopright" />
				<target>busylist</target>
			</button_iedit>
		</sheetdata>
	</windowclass>
	
	<windowclass name="list_busyentry">
		<margins control="0,0,0,2" />
		<softclose />
		<script>
			function onInit()
			end
			function update()
				if windowlist.window.busylist_iedit.getValue() == 0 then
					idelete.setVisible(false);
				else
					idelete.setVisible(true);
				end
			end
		</script>
		<sheetdata>
			<genericcontrol name="rightanchor">
				<anchored width="0" height="0">
					<top />
					<right />
				</anchored>
				<invisible />
			</genericcontrol>
			<button_idelete name="idelete">
				<anchored width="20" height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-5" />
				</anchored>
			</button_idelete>
			<buttonfield name="isgmonly" source=".isgmonly">
				<anchored width="20" height="20">
					<top offset="3" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-5" />
				</anchored>
				<state icon="visibilityon" tooltipres="visibilityon" />
				<state icon="visibilityoff" tooltipres="visibilityoff" />
				
			</buttonfield>
			
		
			<buttoncontrol name="unitsbutton">
				<anchored width="60" height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-10" />
				</anchored>
				<tooltip text="Measurement" />
				<state text="Minutes" />
				<state text="Hours" />
				<state text="Days" />
				<sourcefields>
					<current>.units</current>
				</sourcefields>
				<frame name="fielddark" offset="0,0,0,0" />
				<script>
					function onInit()
						update();
					end
					function onValueChanged()
						DB.setValue(window.getDatabaseNode(), "units", "number", getValue());
					end
					function update()
						setValue(DB.getValue(window.getDatabaseNode(), "units", 0));
					end
				</script>
			</buttoncontrol>
			<basicnumber name="units" source=".units">
				<anchored height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-10" />
				</anchored>
				<script>
					function onInit()
						update();
					end
					function onValueChanged()
						update();
					end
					function update()
						window.unitsbutton.setValue(getValue());
					end
				</script>
				<invisible />
			</basicnumber>
			<basicnumber name="duration" source=".duration">
				<anchored height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-10" />
				</anchored>
				<script>
					function onInit()
						setValue(DB.getValue(window.getDatabaseNode(), "duration", 0));
					end
					function onValueChanged()
						local CurrentDate = TimeManager.getCurrentRawDate();
						local LastDate = TimeManager.getLastDate(window.getDatabaseNode(), CurrentDate);
					end
				</script>
				<tooltip textres="duration_tooltip" />
			</basicnumber>
			<stringu name="actorname" source=".actorname">
				<anchored width="80" height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-10" />
				</anchored>
				<invisible />
				<script>
					function onInit()
						onValueChanged();
					end
					function onValueChanged()
					
						DB.setValue(window.getDatabaseNode(), "displayactorname", "string", DB.getValue(DB.findNode("charsheet." .. DB.getValue(window.getDatabaseNode(), "actorname", "")), "name", ""));
					end
				</script>
			</stringu>
			<stringu name="displayactorname" source=".displayactorname">
				<anchored width="80" height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-10" />
				</anchored>
				<tooltip text="Actor. Double-Click to delete entry. Double-Click empty space to add entry for active character if one does not exist" />
				<script>
					function onDoubleClick()
						DB.deleteNode(window.getDatabaseNode());
					end
				</script>
				<readonly />
			</stringu>
			<stringu name="name" source=".name">
				<anchored height="20">
					<top offset="2" />
					<right parent="rightanchor" anchor="left" relation="relative" offset="-10" />
					<left offset="10" />
				</anchored>
				<tooltip text="Action you are busy with. Double-Click to delete entry. Double-Click empty space to add entry for active character if one does not exist" />
				<script>
					
					function onDoubleClick()
						DB.deleteNode(window.getDatabaseNode());
					end
				</script>
			</stringu>
		</sheetdata>
	</windowclass>
	
	<windowclass name="chattime">
		<frame>recordsheet</frame>
		<size width="260" height="110" />
		<noclose />
		<sheetdata>
			<label name="currenthour">
				<anchored position="insidetopleft" width="20">
					<left anchor="left" offset="15" />
					<top offset="22" />
				</anchored>
				<frame name="fieldlight" offset="7,5,7,5" />
				<stateframe>
					<hover name="fieldfocus" offset="7,5,7,5" />
				</stateframe>
				<readonly />
				<center />
				<!-- Opening timedevents, timedreminders, and travelmanager in onInit() allows for their
				triggers to work correctly on campaign open, otherwise they don't work until opened manually. -->
				<script>
					function onInit()
						if not DB.getValue(TimeManager.CAL_NEWCAMPAIGN,0) == 1 then
							local nYear = DB.getValue(TimeManager.CAL_CUR_YEAR);
							if not nYear then
								DB.setValue(TimeManager.CAL_CUR_YEAR,"number", 0);
							end
							local nMonth = DB.getValue(TimeManager.CAL_CUR_MONTH);
							if not nMonth or nMonth == 0 then
								DB.setValue(TimeManager.CAL_CUR_MONTH,"number", 1);
							end
							local nDay = DB.getValue(TimeManager.CAL_CUR_DAY);
							if not nDay then
								DB.setValue(TimeManager.CAL_CUR_DAY, "number", 1);
							end
							local nMinute = DB.getValue(TimeManager.CAL_CUR_MIN);
							if not nMinute then
								DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
							end
							local nHour = DB.getValue(TimeManager.CAL_CUR_HOUR);
							if not nHour then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 0);
							end
							Interface.openWindow("calendar", "calendar");
							DB.setValue(TimeManager.CAL_NEWCAMPAIGN, "number", 1);
						end
						DB.addHandler(TimeManager.CAL_CUR_HOUR, "onUpdate", onSourceChanged);
						onSourceChanged();

						Interface.openWindow("timedevents", "DB");
						Interface.toggleWindow("timedevents", "DB");
						Interface.openWindow("timedreminders", "DB");
						Interface.toggleWindow("timedreminders", "DB");
						Interface.openWindow("travelmanager", "DB");
						Interface.toggleWindow("travelmanager", "DB");
					end

					function onClose()
						DB.removeHandler(TimeManager.CAL_CUR_HOUR, "onUpdate", onSourceChanged);
					end

					function onSourceChanged()
						local nHour, sPhase = CalendarManager.getDisplayHour();
						setValue(string.format("%2d", nHour));
						window.currentphase.setValue(sPhase);
					end
				</script>
			</label>
			<label name="timesep">
				<anchored to="currenthour" position="righthigh" offset="5" />
				<static>:</static>
			</label>
			<label name="currentminute">
				<anchored to="timesep" position="righthigh" offset="6" width="20" />
				<frame name="fieldlight" offset="7,5,7,5" />
				<stateframe>
					<hover name="fieldfocus" offset="7,5,7,5" />
				</stateframe>
				<readonly />
				<center />
				<timeunit>calendar.current.minute</timeunit>
				<script file="desktop/scripts/current_mdmy.lua" />
			</label>
			<label name="currentphase">
				<anchored to="currentminute" position="righthigh" offset="10" width="20" />
				<center />
			</label>
			<label name="currentday">
				<anchored to="currentphase" position="righthigh" offset="10" width="20" />
				<frame name="fieldlight" offset="7,5,7,5" />
				<stateframe>
					<hover name="fieldfocus" offset="7,5,7,5" />
				</stateframe>
				<readonly />
				<center />
				<timeunit>calendar.current.day</timeunit>
				<script file="desktop/scripts/current_mdmy.lua" />
			</label>
			<label name="currentmonth">
				<anchored to="currentday" position="righthigh" offset="15" width="20" />
				<frame name="fieldlight" offset="7,5,7,5" />
				<stateframe>
					<hover name="fieldfocus" offset="7,5,7,5" />
				</stateframe>
				<readonly />
				<center />
				<timeunit>calendar.current.month</timeunit>
				<script file="desktop/scripts/current_mdmy.lua" />
			</label>
			<label name="currentyear">
				<anchored to="currentmonth" position="righthigh" offset="10" width="50" />
				<frame name="fieldlight" offset="7,5,7,5" />
				<stateframe>
					<hover name="fieldfocus" offset="7,5,7,5" />
				</stateframe>
				<readonly />
				<center />
				<timeunit>calendar.current.year</timeunit>
				<script file="desktop/scripts/current_mdmy.lua" />
			</label>

			<basicnumber name="addhour" source="addhour">
				<anchored to="currenthour" width="20">
					<left anchor="left" offset="0" />
					<top anchor="bottom" offset="10" />
				</anchored>
				<min>0</min>
				<tooltip textres="desktop_addhour_tooltip" />
				<script>
					function onInit()
						setValue(DB.getValue("calendar.addhour", 0));
					end
					function onClose()
						DB.setValue("calendar.addhour", "number", getValue() or 0);
					end
					function onDoubleClick()
						local nHour = getValue() or 0;
						
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						local nRounds = ((nHour * 60) * 60) / nTurnLength;

						CalendarManager.adjustHours(nHour);
						
						if OptionsManager.isOption('TIMEROUNDS', 'slow') and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
						end
						TimeManager.TimeChanged();
						TimeManager.checkWeather();
						if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
							TimeManager.outputDate();
							DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
						end
						if nHour &gt; 0 then
							TimeManager.outputTime();
						end

						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);

						DB.setValue("calendar.addhour", "number", getValue() or 0);
					end
				</script>
			</basicnumber>
			<label name="timesep2">
				<anchored to="addhour" position="righthigh" offset="5" />
				<static>:</static>
			</label>
			<basicnumber name="addminute" source="addminute">
				<anchored to="timesep2" position="righthigh" offset="6" width="20" />
				<min>0</min>
				<tooltip textres="desktop_addminute_tooltip" />
				<script>
					function onInit()
						setValue(DB.getValue("calendar.addminute", 0));
					end
					function onClose()
						DB.setValue("calendar.addminute", "number", getValue() or 0);
					end
					function onDoubleClick()
						local nMinute = getValue() or 0;
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						
						local nRounds = (nMinute * 60) / nTurnLength;
						CalendarManager.adjustMinutes(nMinute);
						
						TimeManager.TimeChanged();
						if OptionsManager.isOption('TIMEROUNDS', 'slow') and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
						end
						if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
							TimeManager.outputDate();
							DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
						end
						if nMinute &gt; 0 then
							TimeManager.outputTime();
						end
						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);

						DB.setValue("calendar.addminute", "number", getValue() or 0);
					end
				</script>
			</basicnumber>

			<basicnumber name="addday" source="addday">
				<anchored to="currentday" width="20">
					<left anchor="left" offset="0" />
					<top anchor="bottom" offset="10" />
				</anchored>
				<min>0</min>
				<tooltip textres="desktop_addday_tooltip" />
				<script>
					function onInit()
						setValue(DB.getValue("calendar.addday", 0));
					end
					function onClose()
						DB.setValue("calendar.addday", "number", getValue() or 0);
					end

					function onDoubleClick()
						local nDay = getValue() or 0;
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						local nRounds = (nDay * 14400) / nTurnLength;

						CalendarManager.adjustDays(nDay);
						
						if OptionsManager.isOption('TIMEROUNDS', 'slow') and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
						end
						TimeManager.TimeChanged();
						TimeManager.checkWeather();
						if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
							DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
						end
						if nDay &gt; 0 then
							TimeManager.outputDate();
						end

						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);

						DB.setValue("calendar.addday", "number", getValue() or 0);
					end
				</script>
			</basicnumber>
			<basicnumber name="addmonth" source="addmonth">
				<anchored to="addday" position="righthigh" offset="15" width="20" />
				<min>0</min>
				<tooltip textres="desktop_addmonth_tooltip" />
				<script>
					function onInit()
						setValue(DB.getValue("calendar.addmonth", 0));
					end
					function onClose()
						DB.setValue("calendar.addmonth", "number", getValue() or 0);
					end
					function onDoubleClick()
						local nMonth = getValue() or 0;
						
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						local aCurrentDate = TimeManager.getCurrentRawDate();
						local aNextDate = TimeManager.getCurrentRawDate();
						local nMonthsinYear = CalendarManager.getMonthsInYear();
						if (aNextDate.nMonth + 1) > nMonthsinYear then
							aNextDate.nMonth = 1;
							aNextDate.nYear = aNextDate.nYear + 1;
						else
							aNextDate.nMonth = aNextDate.nMonth + 1;
						end
						local nMinuteDifference = TimeManager.getRawDateDifferences(aNextDate, aCurrentDate);
						
						local nRounds = (nMinuteDifference * 60) / nTurnLength;


						CalendarManager.adjustMonths(nMonth);
						TimeManager.TimeChanged();
						
						if OptionsManager.isOption('TIMEROUNDS', 'slow') and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
						end
						TimeManager.checkWeather();
						if nMonth &gt; 0 then
							TimeManager.outputDate();
						end

						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);

						DB.setValue("calendar.addmonth", "number", getValue() or 0);
					end
				</script>
			</basicnumber>
			<basicnumber name="addyear" source="addyear">
				<anchored to="addmonth" position="righthigh" offset="10" width="50" />
				<min>0</min>
				<tooltip textres="desktop_addyears_tooltip" />
				<script>
					function onInit()
						setValue(DB.getValue("calendar.addyear", 0));
					end
					function onClose()
						DB.setValue("calendar.addyear", "number", getValue() or 0);
					end
					function onDoubleClick()
						local nYear = (window.addyear.getValue() or 0);
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						
						CalendarManager.adjustYears(nYear);
						
						TimeManager.TimeChanged();
						TimeManager.checkWeather();
						if nYear &gt; 0 then
							TimeManager.outputDate();
						end


						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);

						DB.setValue("calendar.addyear", "number", getValue() or 0);
						
					end
				</script>
			</basicnumber>

			<label name="addall">
				<anchored to="addminute" position="righthigh" offset="9" width="24" />
				<static textres="desktop_panel_add" />
				<tooltip textres="desktop_addall_tooltip" />
				<script>
					function onDoubleClick()
						local nMinute = window.addminute.getValue() or 0;
						local nHour = window.addhour.getValue() or 0;
						local nDay = window.addday.getValue() or 0;
						local nMonth = window.addmonth.getValue() or 0;
						local nYear = window.addyear.getValue() or 0;
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						
						local aCurrentDate = TimeManager.getCurrentRawDate();
						local aNextDate = TimeManager.getCurrentRawDate();
						local nMonthsinYear = CalendarManager.getMonthsInYear();
						if (aNextDate.nMonth + 1) > nMonthsinYear then
							aNextDate.nMonth = 1;
							aNextDate.nYear = aNextDate.nYear + 1;
						else
							aNextDate.nMonth = aNextDate.nMonth + 1;
						end
						local nMinuteDifference = TimeManager.getRawDateDifferences(aNextDate, aCurrentDate);
						
						local nRounds = ((nHour * 600) + (nMinute * 60) + (nDay * 14400) + (nMinuteDifference * 60)) / nTurnLength;

						
						TimeManager.checkWeather()
						CalendarManager.adjustMinutes(nMinute);
						CalendarManager.adjustHours(nHour);
						CalendarManager.adjustDays(nDay);
						CalendarManager.adjustMonths(nMonth);
						CalendarManager.adjustYears(nYear);
						TimeManager.outputDate();
						TimeManager.outputTime();

						TimeManager.TimeChanged();
						if OptionsManager.isOption('TIMEROUNDS', 'slow') and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
						end
						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
						
					end
				</script>
				<center />
			</label>

			<basicnumber name="longrest">
				<anchored to="addhour" width="20">
					<left anchor="left" offset="0" />
					<top anchor="bottom" offset="10" />
				</anchored>
				<min>0</min>
				<tooltip textres="desktop_longrest" />
				<script>
					local bIsbLong, bIsbShort
					function onInit()
						local sRuleset = User.getRulesetName();
						bIsbLong = (sRuleset == "4E" or sRuleset == "5E")
						bIsbShort = (sRuleset == "PFRPG" or sRuleset == "PFRPG2" or sRuleset == "3.5E")
						if not bIsbLong and not bIsbShort then
							setVisible(false);
						else
							setValue(DB.getValue(DB.findNode("calendar"), "lastlongrest", 0))
 						end
					end
					function onDoubleClick()
						
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						local nHours = getValue() or 0;
						local nRounds = ((nHours * 60) * 60) / nTurnLength;

						

						DB.setValue(DB.findNode('calendar'), "lastlongrest", "number", nHours)
						
						CalendarManager.adjustHours((getValue() or 0));
						
						TimeManager.TimeChanged();
						
						if OptionsManager.isOption("TIMEROUNDS", "slow") and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds);
						end
						if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
							TimeManager.outputDate();
							DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
						end
						TimeManager.outputTime();
						ChatManager.Message(Interface.getString("ct_message_restlong") or Interface.getString("ct_message_restovernight") or Interface.getString("ct_message_restextended") or "Long Rest", true);
						
						if bIsbLong then
							CombatManager2.rest(true);
						elseif bIsbShort then
							CombatManager2.rest();
						end
						TimeManager.checkWeather();

						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
						
					end
				</script>
			</basicnumber>

			<basicnumber name="shortrest">
				<anchored to="addminute" width="20">
					<left anchor="left" offset="0" />
					<top anchor="bottom" offset="10" />
				</anchored>
				<min>0</min>
				<tooltip textres="desktop_shortrest" />
				<script>
					local bIsbLong, bIsbShort
					function onInit()
						local sRuleset = User.getRulesetName();
						bIsbLong = (sRuleset == "4E" or sRuleset == "5E")
						bIsbShort = (sRuleset == "PFRPG" or sRuleset == "PFRPG2" or sRuleset == "3.5E")
						if not bIsbLong and not bIsbShort then
							setVisible(false);
						else
							setValue(DB.getValue(DB.findNode("calendar"), "lastshortrest", 0))
 						end
					end
					function onDoubleClick()

						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						local nMinutes = getValue() or 0
						local nRounds = (nMinutes * 60) / nTurnLength;

						

						DB.setValue(DB.findNode("calendar"), "lastshortrest", "number", nMinutes)
						
						CalendarManager.adjustMinutes((getValue() or 0));
						
						TimeManager.TimeChanged();
						
						if OptionsManager.isOption('TIMEROUNDS', 'slow') and nRounds &lt; 4801 then
							CombatManager.nextRound(nRounds, true);
						else
							LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
						end
						if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
							TimeManager.outputDate();
							DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
						end
						TimeManager.outputTime();
						ChatManager.Message(Interface.getString("ct_message_rest") or Interface.getString("menu_restshort"), true);

						if bIsbLong then
							CombatManager2.rest();
						elseif bIsbShort then
							CombatManager2.rest(true);
						end

						local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
						nCurrentRound = nCurrentRound % nRoundMod
						DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
					end
				</script>
			</basicnumber>

			<buttoncontrol name="adv6am">
				<anchored to="shortrest" position="righthigh" offset="10,0" width="20" height="20" />
				<icon normal="6AM_Dark" pressed="6AM_Dark_down" />
				<tooltip textres="desktop_adv6am_tooltip" />
				<script>
					function onButtonPress()
						local nCurrentHour = DB.getValue(TimeManager.CAL_CUR_HOUR, 0);
						local nCurrentMinute = DB.getValue(TimeManager.CAL_CUR_MIN, 0);
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;
						if TimeManager.getCurrentDate() then
							if nCurrentHour &gt;= 6 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 6);
								CalendarManager.adjustDays(1);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							elseif nCurrentHour &lt; 6 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 6);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							end
							
							TimeManager.checkWeather();
							if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
								TimeManager.outputDate();
								DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
							end
							TimeManager.outputTime();

							local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
							nCurrentRound = nCurrentRound % nRoundMod
							DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
							local nMinutes = TimeManager.TimeChanged()
							local nRounds = (nMinutes * 60) / nTurnLength;

							if OptionsManager.isOption('TIMEROUNDS', 'slow') then
								CombatManager.nextRound(nRounds, true);
							else
								LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
							end
						end
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="adv12pm">
				<anchored to="adv6am" position="righthigh" offset="2,0" width="20" height="20" />
				<icon normal="12PM_Dark" pressed="12PM_Dark_down" />
				<tooltip textres="desktop_adv12pm_tooltip" />
				<script>
					function onButtonPress()
						local nCurrentHour = DB.getValue(TimeManager.CAL_CUR_HOUR, 0);
						local nCurrentMinute = DB.getValue(TimeManager.CAL_CUR_MIN, 0);
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;

						if TimeManager.getCurrentDate() then
							if nCurrentHour &gt;= 12 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 12);
								CalendarManager.adjustDays(1);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							elseif nCurrentHour &lt; 12 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 12);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							end
							
							TimeManager.checkWeather();
							if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
								TimeManager.outputDate();
								DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
							end
							TimeManager.outputTime();
							

							local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
							nCurrentRound = nCurrentRound % nRoundMod
							DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
							local nMinutes = TimeManager.TimeChanged()
							local nRounds = (nMinutes * 60) / nTurnLength;

							if OptionsManager.isOption('TIMEROUNDS', 'slow') then
								CombatManager.nextRound(nRounds, true);
							else
								LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
							end
						end
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="adv6pm">
				<anchored to="adv12pm" position="righthigh" offset="2,0" width="20" height="20" />
				<icon normal="6PM_Dark" pressed="6PM_Dark_down" />
				<tooltip textres="desktop_adv6pm_tooltip" />
				<script>
					function onButtonPress()
						local nCurrentHour = DB.getValue(TimeManager.CAL_CUR_HOUR, 0);
						local nCurrentMinute = DB.getValue(TimeManager.CAL_CUR_MIN, 0);
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;

						if TimeManager.getCurrentDate() then
							if nCurrentHour &gt;= 18 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 18);
								CalendarManager.adjustDays(1);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							elseif nCurrentHour &lt; 18 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 18);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							end
							
							TimeManager.checkWeather();
							if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
								TimeManager.outputDate();
								DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
							end
							TimeManager.outputTime();


							local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
							nCurrentRound = nCurrentRound % nRoundMod
							DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
							local nMinutes = TimeManager.TimeChanged()
							local nRounds = (nMinutes * 60) / nTurnLength;

							if OptionsManager.isOption('TIMEROUNDS', 'slow') then
								CombatManager.nextRound(nRounds, true);
							else
								LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
							end
							
						end
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="adv12am">
				<anchored to="adv6pm" position="righthigh" offset="2,0" width="20" height="20" />
				<icon normal="12AM_Dark" pressed="12AM_Dark_down" />
				<tooltip textres="desktop_adv12am_tooltip" />
				<script>
					function onButtonPress()
						local nCurrentHour = DB.getValue(TimeManager.CAL_CUR_HOUR, 0);
						local nCurrentMinute = DB.getValue(TimeManager.CAL_CUR_MIN, 0);
						local nTurnLength = tonumber(OptionsManager.getOption("ROUNDLENGTH"));
						local nRoundMod = 60 / nTurnLength;

						if TimeManager.getCurrentDate() then
							if nCurrentHour &gt;= 0 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 0);
								CalendarManager.adjustDays(1);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							elseif nCurrentHour &lt; 0 then
								DB.setValue(TimeManager.CAL_CUR_HOUR, "number", 0);
								if nCurrentMinute &gt;= 1 then
									DB.setValue(TimeManager.CAL_CUR_MIN, "number", 0);
								end
							end

							
							TimeManager.checkWeather();
							if DB.getValue(TimeManager.CAL_CHK_DAY) == nil or DB.getValue(TimeManager.CAL_CHK_DAY) ~= DB.getValue(TimeManager.CAL_CUR_DAY) then
								TimeManager.outputDate();
								DB.setValue(TimeManager.CAL_CHK_DAY, "number", DB.getValue(TimeManager.CAL_CUR_DAY));
							end
							TimeManager.outputTime();


							local nCurrentRound = DB.getValue(CombatManager.CT_ROUND, 0);
							nCurrentRound = nCurrentRound % nRoundMod
							DB.setValue(CombatManager.CT_ROUND, "number", nCurrentRound);
							local nMinutes = TimeManager.TimeChanged()
							local nRounds = (nMinutes * 60) / nTurnLength;

							if OptionsManager.isOption('TIMEROUNDS', 'slow') then
								CombatManager.nextRound(nRounds, true);
							else
								LongTermEffects.advanceRoundsOnTimeChanged(nRounds)
							end
						end
					end
				</script>
			</buttoncontrol>
			<buttoncontrol name="openevents">
				<anchored to="adv12am" position="righthigh" offset="2,0" width="20" height="20" />
				<icon normal="add_logentry" pressed="add_logentry_down" />
				<tooltip textres="desktop_openevents_tooltip" />
				<subwindow>timedevents</subwindow>
				<script file="desktop/scripts/open_subwindow.lua" />
			</buttoncontrol>
			<buttoncontrol name="openreminders">
				<anchored to="openevents" position="righthigh" offset="2,0" width="20" height="20" />
				<icon normal="reminder_button" pressed="reminder_button_down" />
				<tooltip textres="desktop_openreminders_tooltip" />
				<subwindow>timedreminders</subwindow>
				<script file="desktop/scripts/open_subwindow.lua" />
			</buttoncontrol>
			<buttoncontrol name="opentravelmanager">
				<anchored to="openreminders" position="righthigh" offset="2,0" width="20" height="20" />
				<icon normal="atob_button" pressed="atob_button_down" />
				<tooltip textres="desktop_opentravel_tooltip" />
				<subwindow>travelmanager</subwindow>
				<script file="desktop/scripts/open_subwindow.lua" />
			</buttoncontrol>
			<button_checkbox name="checkweather" source=".checkweather">
				<anchored to="opentravelmanager" position="righthigh" offset="0,0" width="20" height="20" />
				<values>
					<maximum>1</maximum>
				</values>
				<sourcefields>
					<current>checkweatherhidden</current>
				</sourcefields>
				<tooltip text="Check Weather on Time Adjust; NOTE: You must have a table for each 'Weather Wind', 'Weather Temperature', and 'Weather Precipitation'" />
				<script>
					function onInit()
						if super and super.onInit() then
							super.onInit();
						end
						setValue(DB.getValue(DB.createNode("DB.checkweather" ,"number"), "", 0));
					end
					function onValueChanged()
						if super and super.onValueChanged() then
							super.onValueChanged();
						end
						DB.setValue(DB.createNode("DB.checkweather" ,"number"), "", "number", getValue());
					end
				</script>	
			</button_checkbox>
			<basicnumber name="checkweatherhidden" source=".checkweather">
				<anchored to="opentravelmanager" position="righthigh" offset="0,0" width="20" height="20" />
				<invisible />
			</basicnumber>
		</sheetdata>
	</windowclass>

	
</root>
